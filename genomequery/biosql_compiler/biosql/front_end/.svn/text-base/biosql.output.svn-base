Terminals unused in grammar

   NOT_EQUAL
   COUNT
   IMPORT
   USE
   INTERVAL_CREATION
   TK_NEGATIVE_SIGN
   TK_POSITIVE_SIGN
   TK_RIGHT_SQUARE_BRACKET
   TK_LEFT_SQUARE_BRACKET
   TK_RIGHT_BRACKET
   TK_LEFT_BRACKET


State 15 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 111 conflicts: 5 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 3 shift/reduce
State 119 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: table_prototypes genome_names assigned_selects print_statements

    2 table_prototypes: table_prototype table_prototypes
    3                 | /* empty */

    4 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON

    5 table_keyword: TABLE names

    6 names: ID

    7 numbers: NUMBER

    8 table_args: table_args COMMA table_arg
    9           | table_arg

   10 table_arg: INTEGER names
   11          | FLOAT names
   12          | CHAR names
   13          | STRING_TYPE names

   14 genome_names: genome_names genome_names
   15             | GENOME names SEMICOLON

   16 assigned_selects: assigned_select assigned_selects
   17                 | /* empty */

   18 assigned_select: lvalue ASSIGN select_statement

   19 lvalue: names

   20 select_statement: SELECT select_args FROM compound_from_arg WHERE where_args
   21                 | SELECT select_intrvl_args FROM compound_from_arg
   22                 | SELECT select_args FROM MAPJOIN from_args

   23 select_intrvl_args: CREATE_INTERVALS LPAREN RPAREN
   24                   | MERGE_INTERVALS LPAREN names GREATER numbers RPAREN
   25                   | MERGE_INTERVALS LPAREN names LESS numbers RPAREN

   26 select_args: STAR
   27            | select_arg_series

   28 select_arg_series: names COMMA select_arg_series
   29                  | names
   30                  | obj_names

   31 from_args: compound_from_arg COMMA from_args
   32          | compound_from_arg

   33 compound_from_arg: from_arg
   34                  | from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr RPAREN
   35                  | from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr COMMA BOTH_MATES RPAREN

   36 from_arg: names

   37 where_args: where_args COMMA where_args
   38           | where_args AND where_args
   39           | where_args OR where_args
   40           | NOT where_args
   41           | LPAREN where_args RPAREN
   42           | lowest_expr

   43 lowest_expr: arith_expr comparison_op arith_expr

   44 arith_expr: arith_expr arith_op arith_expr
   45           | arith_op arith_expr
   46           | names LPAREN arith_expr RPAREN
   47           | names
   48           | obj_names
   49           | NUMBER
   50           | CONST_STRING
   51           | CONST_CHAR

   52 obj_names: names DOT names

   53 comparison_op: EQUAL
   54              | GREATER_EQUAL
   55              | LESS_EQUAL
   56              | GREATER
   57              | LESS

   58 arith_op: PLUS
   59         | MINUS
   60         | MUL
   61         | DIV
   62         | MOD

   63 print_statements: print_statement print_statements
   64                 | /* empty */

   65 print_statement: PRINT names
   66                | PRINT names BOTH_MATES


Terminals, with rules where they appear

$end (0) 0
error (256)
CONST_CHAR (258) 51
CONST_STRING (259) 50
NUMBER (260) 7 49
EQUAL (261) 53
ASSIGN (262) 18
STAR (263) 26
GREATER (264) 24 56
LESS (265) 25 57
NOT_EQUAL (266)
LESS_EQUAL (267) 55
GREATER_EQUAL (268) 54
MUL (269) 60
DIV (270) 61
MOD (271) 62
PLUS (272) 58
MINUS (273) 59
AND (274) 38
OR (275) 39
NOT (276) 40
SEMICOLON (277) 4 15
DOT (278) 52
LPAREN (279) 4 23 24 25 34 35 41 46
RPAREN (280) 4 23 24 25 34 35 41 46
COMMA (281) 8 28 31 34 35 37
INTEGER (282) 10
FLOAT (283) 11
CHAR (284) 12
STRING_TYPE (285) 13
ID (286) 6
SELECT (287) 20 21 22
FROM (288) 20 21 22
WHERE (289) 20
COUNT (290)
TABLE (291) 5
MAPJOIN (292) 22
IMPORT (293)
USE (294)
USING (295) 34 35
INTERVAL_CREATION (296)
CREATE_INTERVALS (297) 23
MERGE_INTERVALS (298) 24 25
INTERVALS (299) 34 35
BOTH_MATES (300) 35 66
GENOME (301) 15
PRINT (302) 65 66
TK_NEGATIVE_SIGN (303)
TK_POSITIVE_SIGN (304)
TK_RIGHT_SQUARE_BRACKET (305)
TK_LEFT_SQUARE_BRACKET (306)
TK_RIGHT_BRACKET (307)
TK_LEFT_BRACKET (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
table_prototypes (56)
    on left: 2 3, on right: 1 2
table_prototype (57)
    on left: 4, on right: 2
table_keyword (58)
    on left: 5, on right: 4
names (59)
    on left: 6, on right: 5 10 11 12 13 15 19 24 25 28 29 36 46 47
    52 65 66
numbers (60)
    on left: 7, on right: 24 25
table_args (61)
    on left: 8 9, on right: 4 8
table_arg (62)
    on left: 10 11 12 13, on right: 8 9
genome_names (63)
    on left: 14 15, on right: 1 14
assigned_selects (64)
    on left: 16 17, on right: 1 16
assigned_select (65)
    on left: 18, on right: 16
lvalue (66)
    on left: 19, on right: 18
select_statement (67)
    on left: 20 21 22, on right: 18
select_intrvl_args (68)
    on left: 23 24 25, on right: 21
select_args (69)
    on left: 26 27, on right: 20 22
select_arg_series (70)
    on left: 28 29 30, on right: 27 28
from_args (71)
    on left: 31 32, on right: 22 31
compound_from_arg (72)
    on left: 33 34 35, on right: 20 21 31 32
from_arg (73)
    on left: 36, on right: 33 34 35
where_args (74)
    on left: 37 38 39 40 41 42, on right: 20 37 38 39 40 41
lowest_expr (75)
    on left: 43, on right: 42
arith_expr (76)
    on left: 44 45 46 47 48 49 50 51, on right: 34 35 43 44 45 46
obj_names (77)
    on left: 52, on right: 30 48
comparison_op (78)
    on left: 53 54 55 56 57, on right: 43
arith_op (79)
    on left: 58 59 60 61 62, on right: 44 45
print_statements (80)
    on left: 63 64, on right: 1 63
print_statement (81)
    on left: 65 66, on right: 63


state 0

    0 $accept: . program $end

    TABLE  shift, and go to state 1

    $default  reduce using rule 3 (table_prototypes)

    program           go to state 2
    table_prototypes  go to state 3
    table_prototype   go to state 4
    table_keyword     go to state 5


state 1

    5 table_keyword: TABLE . names

    ID  shift, and go to state 6

    names  go to state 7


state 2

    0 $accept: program . $end

    $end  shift, and go to state 8


state 3

    1 program: table_prototypes . genome_names assigned_selects print_statements

    GENOME  shift, and go to state 9

    genome_names  go to state 10


state 4

    2 table_prototypes: table_prototype . table_prototypes

    TABLE  shift, and go to state 1

    $default  reduce using rule 3 (table_prototypes)

    table_prototypes  go to state 11
    table_prototype   go to state 4
    table_keyword     go to state 5


state 5

    4 table_prototype: table_keyword . LPAREN table_args RPAREN SEMICOLON

    LPAREN  shift, and go to state 12


state 6

    6 names: ID .

    $default  reduce using rule 6 (names)


state 7

    5 table_keyword: TABLE names .

    $default  reduce using rule 5 (table_keyword)


state 8

    0 $accept: program $end .

    $default  accept


state 9

   15 genome_names: GENOME . names SEMICOLON

    ID  shift, and go to state 6

    names  go to state 13


state 10

    1 program: table_prototypes genome_names . assigned_selects print_statements
   14 genome_names: genome_names . genome_names

    ID      shift, and go to state 6
    GENOME  shift, and go to state 9

    $default  reduce using rule 17 (assigned_selects)

    names             go to state 14
    genome_names      go to state 15
    assigned_selects  go to state 16
    assigned_select   go to state 17
    lvalue            go to state 18


state 11

    2 table_prototypes: table_prototype table_prototypes .

    $default  reduce using rule 2 (table_prototypes)


state 12

    4 table_prototype: table_keyword LPAREN . table_args RPAREN SEMICOLON

    INTEGER      shift, and go to state 19
    FLOAT        shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING_TYPE  shift, and go to state 22

    table_args  go to state 23
    table_arg   go to state 24


state 13

   15 genome_names: GENOME names . SEMICOLON

    SEMICOLON  shift, and go to state 25


state 14

   19 lvalue: names .

    $default  reduce using rule 19 (lvalue)


state 15

   14 genome_names: genome_names . genome_names
   14             | genome_names genome_names .

    GENOME  shift, and go to state 9

    GENOME    [reduce using rule 14 (genome_names)]
    $default  reduce using rule 14 (genome_names)

    genome_names  go to state 15


state 16

    1 program: table_prototypes genome_names assigned_selects . print_statements

    PRINT  shift, and go to state 26

    $default  reduce using rule 64 (print_statements)

    print_statements  go to state 27
    print_statement   go to state 28


state 17

   16 assigned_selects: assigned_select . assigned_selects

    ID  shift, and go to state 6

    $default  reduce using rule 17 (assigned_selects)

    names             go to state 14
    assigned_selects  go to state 29
    assigned_select   go to state 17
    lvalue            go to state 18


state 18

   18 assigned_select: lvalue . ASSIGN select_statement

    ASSIGN  shift, and go to state 30


state 19

   10 table_arg: INTEGER . names

    ID  shift, and go to state 6

    names  go to state 31


state 20

   11 table_arg: FLOAT . names

    ID  shift, and go to state 6

    names  go to state 32


state 21

   12 table_arg: CHAR . names

    ID  shift, and go to state 6

    names  go to state 33


state 22

   13 table_arg: STRING_TYPE . names

    ID  shift, and go to state 6

    names  go to state 34


state 23

    4 table_prototype: table_keyword LPAREN table_args . RPAREN SEMICOLON
    8 table_args: table_args . COMMA table_arg

    RPAREN  shift, and go to state 35
    COMMA   shift, and go to state 36


state 24

    9 table_args: table_arg .

    $default  reduce using rule 9 (table_args)


state 25

   15 genome_names: GENOME names SEMICOLON .

    $default  reduce using rule 15 (genome_names)


state 26

   65 print_statement: PRINT . names
   66                | PRINT . names BOTH_MATES

    ID  shift, and go to state 6

    names  go to state 37


state 27

    1 program: table_prototypes genome_names assigned_selects print_statements .

    $default  reduce using rule 1 (program)


state 28

   63 print_statements: print_statement . print_statements

    PRINT  shift, and go to state 26

    $default  reduce using rule 64 (print_statements)

    print_statements  go to state 38
    print_statement   go to state 28


state 29

   16 assigned_selects: assigned_select assigned_selects .

    $default  reduce using rule 16 (assigned_selects)


state 30

   18 assigned_select: lvalue ASSIGN . select_statement

    SELECT  shift, and go to state 39

    select_statement  go to state 40


state 31

   10 table_arg: INTEGER names .

    $default  reduce using rule 10 (table_arg)


state 32

   11 table_arg: FLOAT names .

    $default  reduce using rule 11 (table_arg)


state 33

   12 table_arg: CHAR names .

    $default  reduce using rule 12 (table_arg)


state 34

   13 table_arg: STRING_TYPE names .

    $default  reduce using rule 13 (table_arg)


state 35

    4 table_prototype: table_keyword LPAREN table_args RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 41


state 36

    8 table_args: table_args COMMA . table_arg

    INTEGER      shift, and go to state 19
    FLOAT        shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING_TYPE  shift, and go to state 22

    table_arg  go to state 42


state 37

   65 print_statement: PRINT names .
   66                | PRINT names . BOTH_MATES

    BOTH_MATES  shift, and go to state 43

    $default  reduce using rule 65 (print_statement)


state 38

   63 print_statements: print_statement print_statements .

    $default  reduce using rule 63 (print_statements)


state 39

   20 select_statement: SELECT . select_args FROM compound_from_arg WHERE where_args
   21                 | SELECT . select_intrvl_args FROM compound_from_arg
   22                 | SELECT . select_args FROM MAPJOIN from_args

    STAR              shift, and go to state 44
    ID                shift, and go to state 6
    CREATE_INTERVALS  shift, and go to state 45
    MERGE_INTERVALS   shift, and go to state 46

    names               go to state 47
    select_intrvl_args  go to state 48
    select_args         go to state 49
    select_arg_series   go to state 50
    obj_names           go to state 51


state 40

   18 assigned_select: lvalue ASSIGN select_statement .

    $default  reduce using rule 18 (assigned_select)


state 41

    4 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON .

    $default  reduce using rule 4 (table_prototype)


state 42

    8 table_args: table_args COMMA table_arg .

    $default  reduce using rule 8 (table_args)


state 43

   66 print_statement: PRINT names BOTH_MATES .

    $default  reduce using rule 66 (print_statement)


state 44

   26 select_args: STAR .

    $default  reduce using rule 26 (select_args)


state 45

   23 select_intrvl_args: CREATE_INTERVALS . LPAREN RPAREN

    LPAREN  shift, and go to state 52


state 46

   24 select_intrvl_args: MERGE_INTERVALS . LPAREN names GREATER numbers RPAREN
   25                   | MERGE_INTERVALS . LPAREN names LESS numbers RPAREN

    LPAREN  shift, and go to state 53


state 47

   28 select_arg_series: names . COMMA select_arg_series
   29                  | names .
   52 obj_names: names . DOT names

    DOT    shift, and go to state 54
    COMMA  shift, and go to state 55

    $default  reduce using rule 29 (select_arg_series)


state 48

   21 select_statement: SELECT select_intrvl_args . FROM compound_from_arg

    FROM  shift, and go to state 56


state 49

   20 select_statement: SELECT select_args . FROM compound_from_arg WHERE where_args
   22                 | SELECT select_args . FROM MAPJOIN from_args

    FROM  shift, and go to state 57


state 50

   27 select_args: select_arg_series .

    $default  reduce using rule 27 (select_args)


state 51

   30 select_arg_series: obj_names .

    $default  reduce using rule 30 (select_arg_series)


state 52

   23 select_intrvl_args: CREATE_INTERVALS LPAREN . RPAREN

    RPAREN  shift, and go to state 58


state 53

   24 select_intrvl_args: MERGE_INTERVALS LPAREN . names GREATER numbers RPAREN
   25                   | MERGE_INTERVALS LPAREN . names LESS numbers RPAREN

    ID  shift, and go to state 6

    names  go to state 59


state 54

   52 obj_names: names DOT . names

    ID  shift, and go to state 6

    names  go to state 60


state 55

   28 select_arg_series: names COMMA . select_arg_series

    ID  shift, and go to state 6

    names              go to state 47
    select_arg_series  go to state 61
    obj_names          go to state 51


state 56

   21 select_statement: SELECT select_intrvl_args FROM . compound_from_arg

    ID  shift, and go to state 6

    names              go to state 62
    compound_from_arg  go to state 63
    from_arg           go to state 64


state 57

   20 select_statement: SELECT select_args FROM . compound_from_arg WHERE where_args
   22                 | SELECT select_args FROM . MAPJOIN from_args

    ID       shift, and go to state 6
    MAPJOIN  shift, and go to state 65

    names              go to state 62
    compound_from_arg  go to state 66
    from_arg           go to state 64


state 58

   23 select_intrvl_args: CREATE_INTERVALS LPAREN RPAREN .

    $default  reduce using rule 23 (select_intrvl_args)


state 59

   24 select_intrvl_args: MERGE_INTERVALS LPAREN names . GREATER numbers RPAREN
   25                   | MERGE_INTERVALS LPAREN names . LESS numbers RPAREN

    GREATER  shift, and go to state 67
    LESS     shift, and go to state 68


state 60

   52 obj_names: names DOT names .

    $default  reduce using rule 52 (obj_names)


state 61

   28 select_arg_series: names COMMA select_arg_series .

    $default  reduce using rule 28 (select_arg_series)


state 62

   36 from_arg: names .

    $default  reduce using rule 36 (from_arg)


state 63

   21 select_statement: SELECT select_intrvl_args FROM compound_from_arg .

    $default  reduce using rule 21 (select_statement)


state 64

   33 compound_from_arg: from_arg .
   34                  | from_arg . USING INTERVALS LPAREN arith_expr COMMA arith_expr RPAREN
   35                  | from_arg . USING INTERVALS LPAREN arith_expr COMMA arith_expr COMMA BOTH_MATES RPAREN

    USING  shift, and go to state 69

    $default  reduce using rule 33 (compound_from_arg)


state 65

   22 select_statement: SELECT select_args FROM MAPJOIN . from_args

    ID  shift, and go to state 6

    names              go to state 62
    from_args          go to state 70
    compound_from_arg  go to state 71
    from_arg           go to state 64


state 66

   20 select_statement: SELECT select_args FROM compound_from_arg . WHERE where_args

    WHERE  shift, and go to state 72


state 67

   24 select_intrvl_args: MERGE_INTERVALS LPAREN names GREATER . numbers RPAREN

    NUMBER  shift, and go to state 73

    numbers  go to state 74


state 68

   25 select_intrvl_args: MERGE_INTERVALS LPAREN names LESS . numbers RPAREN

    NUMBER  shift, and go to state 73

    numbers  go to state 75


state 69

   34 compound_from_arg: from_arg USING . INTERVALS LPAREN arith_expr COMMA arith_expr RPAREN
   35                  | from_arg USING . INTERVALS LPAREN arith_expr COMMA arith_expr COMMA BOTH_MATES RPAREN

    INTERVALS  shift, and go to state 76


state 70

   22 select_statement: SELECT select_args FROM MAPJOIN from_args .

    $default  reduce using rule 22 (select_statement)


state 71

   31 from_args: compound_from_arg . COMMA from_args
   32          | compound_from_arg .

    COMMA  shift, and go to state 77

    $default  reduce using rule 32 (from_args)


state 72

   20 select_statement: SELECT select_args FROM compound_from_arg WHERE . where_args

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    NOT           shift, and go to state 86
    LPAREN        shift, and go to state 87
    ID            shift, and go to state 6

    names        go to state 88
    where_args   go to state 89
    lowest_expr  go to state 90
    arith_expr   go to state 91
    obj_names    go to state 92
    arith_op     go to state 93


state 73

    7 numbers: NUMBER .

    $default  reduce using rule 7 (numbers)


state 74

   24 select_intrvl_args: MERGE_INTERVALS LPAREN names GREATER numbers . RPAREN

    RPAREN  shift, and go to state 94


state 75

   25 select_intrvl_args: MERGE_INTERVALS LPAREN names LESS numbers . RPAREN

    RPAREN  shift, and go to state 95


state 76

   34 compound_from_arg: from_arg USING INTERVALS . LPAREN arith_expr COMMA arith_expr RPAREN
   35                  | from_arg USING INTERVALS . LPAREN arith_expr COMMA arith_expr COMMA BOTH_MATES RPAREN

    LPAREN  shift, and go to state 96


state 77

   31 from_args: compound_from_arg COMMA . from_args

    ID  shift, and go to state 6

    names              go to state 62
    from_args          go to state 97
    compound_from_arg  go to state 71
    from_arg           go to state 64


state 78

   51 arith_expr: CONST_CHAR .

    $default  reduce using rule 51 (arith_expr)


state 79

   50 arith_expr: CONST_STRING .

    $default  reduce using rule 50 (arith_expr)


state 80

   49 arith_expr: NUMBER .

    $default  reduce using rule 49 (arith_expr)


state 81

   60 arith_op: MUL .

    $default  reduce using rule 60 (arith_op)


state 82

   61 arith_op: DIV .

    $default  reduce using rule 61 (arith_op)


state 83

   62 arith_op: MOD .

    $default  reduce using rule 62 (arith_op)


state 84

   58 arith_op: PLUS .

    $default  reduce using rule 58 (arith_op)


state 85

   59 arith_op: MINUS .

    $default  reduce using rule 59 (arith_op)


state 86

   40 where_args: NOT . where_args

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    NOT           shift, and go to state 86
    LPAREN        shift, and go to state 87
    ID            shift, and go to state 6

    names        go to state 88
    where_args   go to state 98
    lowest_expr  go to state 90
    arith_expr   go to state 91
    obj_names    go to state 92
    arith_op     go to state 93


state 87

   41 where_args: LPAREN . where_args RPAREN

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    NOT           shift, and go to state 86
    LPAREN        shift, and go to state 87
    ID            shift, and go to state 6

    names        go to state 88
    where_args   go to state 99
    lowest_expr  go to state 90
    arith_expr   go to state 91
    obj_names    go to state 92
    arith_op     go to state 93


state 88

   46 arith_expr: names . LPAREN arith_expr RPAREN
   47           | names .
   52 obj_names: names . DOT names

    DOT     shift, and go to state 54
    LPAREN  shift, and go to state 100

    $default  reduce using rule 47 (arith_expr)


state 89

   20 select_statement: SELECT select_args FROM compound_from_arg WHERE where_args .
   37 where_args: where_args . COMMA where_args
   38           | where_args . AND where_args
   39           | where_args . OR where_args

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    COMMA  shift, and go to state 103

    $default  reduce using rule 20 (select_statement)


state 90

   42 where_args: lowest_expr .

    $default  reduce using rule 42 (where_args)


state 91

   43 lowest_expr: arith_expr . comparison_op arith_expr
   44 arith_expr: arith_expr . arith_op arith_expr

    EQUAL          shift, and go to state 104
    GREATER        shift, and go to state 105
    LESS           shift, and go to state 106
    LESS_EQUAL     shift, and go to state 107
    GREATER_EQUAL  shift, and go to state 108
    MUL            shift, and go to state 81
    DIV            shift, and go to state 82
    MOD            shift, and go to state 83
    PLUS           shift, and go to state 84
    MINUS          shift, and go to state 85

    comparison_op  go to state 109
    arith_op       go to state 110


state 92

   48 arith_expr: obj_names .

    $default  reduce using rule 48 (arith_expr)


state 93

   45 arith_expr: arith_op . arith_expr

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    ID            shift, and go to state 6

    names       go to state 88
    arith_expr  go to state 111
    obj_names   go to state 92
    arith_op    go to state 93


state 94

   24 select_intrvl_args: MERGE_INTERVALS LPAREN names GREATER numbers RPAREN .

    $default  reduce using rule 24 (select_intrvl_args)


state 95

   25 select_intrvl_args: MERGE_INTERVALS LPAREN names LESS numbers RPAREN .

    $default  reduce using rule 25 (select_intrvl_args)


state 96

   34 compound_from_arg: from_arg USING INTERVALS LPAREN . arith_expr COMMA arith_expr RPAREN
   35                  | from_arg USING INTERVALS LPAREN . arith_expr COMMA arith_expr COMMA BOTH_MATES RPAREN

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    ID            shift, and go to state 6

    names       go to state 88
    arith_expr  go to state 112
    obj_names   go to state 92
    arith_op    go to state 93


state 97

   31 from_args: compound_from_arg COMMA from_args .

    $default  reduce using rule 31 (from_args)


state 98

   37 where_args: where_args . COMMA where_args
   38           | where_args . AND where_args
   39           | where_args . OR where_args
   40           | NOT where_args .

    COMMA  shift, and go to state 103

    COMMA     [reduce using rule 40 (where_args)]
    $default  reduce using rule 40 (where_args)


state 99

   37 where_args: where_args . COMMA where_args
   38           | where_args . AND where_args
   39           | where_args . OR where_args
   41           | LPAREN where_args . RPAREN

    AND     shift, and go to state 101
    OR      shift, and go to state 102
    RPAREN  shift, and go to state 113
    COMMA   shift, and go to state 103


state 100

   46 arith_expr: names LPAREN . arith_expr RPAREN

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    ID            shift, and go to state 6

    names       go to state 88
    arith_expr  go to state 114
    obj_names   go to state 92
    arith_op    go to state 93


state 101

   38 where_args: where_args AND . where_args

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    NOT           shift, and go to state 86
    LPAREN        shift, and go to state 87
    ID            shift, and go to state 6

    names        go to state 88
    where_args   go to state 115
    lowest_expr  go to state 90
    arith_expr   go to state 91
    obj_names    go to state 92
    arith_op     go to state 93


state 102

   39 where_args: where_args OR . where_args

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    NOT           shift, and go to state 86
    LPAREN        shift, and go to state 87
    ID            shift, and go to state 6

    names        go to state 88
    where_args   go to state 116
    lowest_expr  go to state 90
    arith_expr   go to state 91
    obj_names    go to state 92
    arith_op     go to state 93


state 103

   37 where_args: where_args COMMA . where_args

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    NOT           shift, and go to state 86
    LPAREN        shift, and go to state 87
    ID            shift, and go to state 6

    names        go to state 88
    where_args   go to state 117
    lowest_expr  go to state 90
    arith_expr   go to state 91
    obj_names    go to state 92
    arith_op     go to state 93


state 104

   53 comparison_op: EQUAL .

    $default  reduce using rule 53 (comparison_op)


state 105

   56 comparison_op: GREATER .

    $default  reduce using rule 56 (comparison_op)


state 106

   57 comparison_op: LESS .

    $default  reduce using rule 57 (comparison_op)


state 107

   55 comparison_op: LESS_EQUAL .

    $default  reduce using rule 55 (comparison_op)


state 108

   54 comparison_op: GREATER_EQUAL .

    $default  reduce using rule 54 (comparison_op)


state 109

   43 lowest_expr: arith_expr comparison_op . arith_expr

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    ID            shift, and go to state 6

    names       go to state 88
    arith_expr  go to state 118
    obj_names   go to state 92
    arith_op    go to state 93


state 110

   44 arith_expr: arith_expr arith_op . arith_expr

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    ID            shift, and go to state 6

    names       go to state 88
    arith_expr  go to state 119
    obj_names   go to state 92
    arith_op    go to state 93


state 111

   44 arith_expr: arith_expr . arith_op arith_expr
   45           | arith_op arith_expr .

    MUL    shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    MUL       [reduce using rule 45 (arith_expr)]
    DIV       [reduce using rule 45 (arith_expr)]
    MOD       [reduce using rule 45 (arith_expr)]
    PLUS      [reduce using rule 45 (arith_expr)]
    MINUS     [reduce using rule 45 (arith_expr)]
    $default  reduce using rule 45 (arith_expr)

    arith_op  go to state 110


state 112

   34 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr . COMMA arith_expr RPAREN
   35                  | from_arg USING INTERVALS LPAREN arith_expr . COMMA arith_expr COMMA BOTH_MATES RPAREN
   44 arith_expr: arith_expr . arith_op arith_expr

    MUL    shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    COMMA  shift, and go to state 120

    arith_op  go to state 110


state 113

   41 where_args: LPAREN where_args RPAREN .

    $default  reduce using rule 41 (where_args)


state 114

   44 arith_expr: arith_expr . arith_op arith_expr
   46           | names LPAREN arith_expr . RPAREN

    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    PLUS    shift, and go to state 84
    MINUS   shift, and go to state 85
    RPAREN  shift, and go to state 121

    arith_op  go to state 110


state 115

   37 where_args: where_args . COMMA where_args
   38           | where_args . AND where_args
   38           | where_args AND where_args .
   39           | where_args . OR where_args

    COMMA  shift, and go to state 103

    COMMA     [reduce using rule 38 (where_args)]
    $default  reduce using rule 38 (where_args)


state 116

   37 where_args: where_args . COMMA where_args
   38           | where_args . AND where_args
   39           | where_args . OR where_args
   39           | where_args OR where_args .

    AND    shift, and go to state 101
    COMMA  shift, and go to state 103

    COMMA     [reduce using rule 39 (where_args)]
    $default  reduce using rule 39 (where_args)


state 117

   37 where_args: where_args . COMMA where_args
   37           | where_args COMMA where_args .
   38           | where_args . AND where_args
   39           | where_args . OR where_args

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    COMMA  shift, and go to state 103

    AND       [reduce using rule 37 (where_args)]
    OR        [reduce using rule 37 (where_args)]
    COMMA     [reduce using rule 37 (where_args)]
    $default  reduce using rule 37 (where_args)


state 118

   43 lowest_expr: arith_expr comparison_op arith_expr .
   44 arith_expr: arith_expr . arith_op arith_expr

    MUL    shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 43 (lowest_expr)

    arith_op  go to state 110


state 119

   44 arith_expr: arith_expr . arith_op arith_expr
   44           | arith_expr arith_op arith_expr .

    MUL    shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    MUL       [reduce using rule 44 (arith_expr)]
    DIV       [reduce using rule 44 (arith_expr)]
    MOD       [reduce using rule 44 (arith_expr)]
    PLUS      [reduce using rule 44 (arith_expr)]
    MINUS     [reduce using rule 44 (arith_expr)]
    $default  reduce using rule 44 (arith_expr)

    arith_op  go to state 110


state 120

   34 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr COMMA . arith_expr RPAREN
   35                  | from_arg USING INTERVALS LPAREN arith_expr COMMA . arith_expr COMMA BOTH_MATES RPAREN

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80
    MUL           shift, and go to state 81
    DIV           shift, and go to state 82
    MOD           shift, and go to state 83
    PLUS          shift, and go to state 84
    MINUS         shift, and go to state 85
    ID            shift, and go to state 6

    names       go to state 88
    arith_expr  go to state 122
    obj_names   go to state 92
    arith_op    go to state 93


state 121

   46 arith_expr: names LPAREN arith_expr RPAREN .

    $default  reduce using rule 46 (arith_expr)


state 122

   34 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr . RPAREN
   35                  | from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr . COMMA BOTH_MATES RPAREN
   44 arith_expr: arith_expr . arith_op arith_expr

    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    PLUS    shift, and go to state 84
    MINUS   shift, and go to state 85
    RPAREN  shift, and go to state 123
    COMMA   shift, and go to state 124

    arith_op  go to state 110


state 123

   34 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr RPAREN .

    $default  reduce using rule 34 (compound_from_arg)


state 124

   35 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr COMMA . BOTH_MATES RPAREN

    BOTH_MATES  shift, and go to state 125


state 125

   35 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr COMMA BOTH_MATES . RPAREN

    RPAREN  shift, and go to state 126


state 126

   35 compound_from_arg: from_arg USING INTERVALS LPAREN arith_expr COMMA arith_expr COMMA BOTH_MATES RPAREN .

    $default  reduce using rule 35 (compound_from_arg)
