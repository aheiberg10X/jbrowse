Terminals unused in grammar

   NOT_EQUAL
   DOT
   TK_NEGATIVE_SIGN
   TK_POSITIVE_SIGN
   TK_RIGHT_SQUARE_BRACKET
   TK_LEFT_SQUARE_BRACKET
   TK_RIGHT_BRACKET
   TK_LEFT_BRACKET


State 63 conflicts: 1 shift/reduce
State 75 conflicts: 5 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 3 shift/reduce
State 84 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: table_prototypes assigned_selects select_statement

    2 table_prototypes: table_prototype table_prototypes
    3                 | /* empty */

    4 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON

    5 table_keyword: TABLE names

    6 names: ID

    7 table_args: table_arg COMMA table_args
    8           | table_arg

    9 table_arg: INTEGER names
   10          | FLOAT names
   11          | CHAR names
   12          | STRING_TYPE names

   13 assigned_selects: assigned_select assigned_selects
   14                 | /* empty */

   15 assigned_select: lvalue ASSIGN select_statement

   16 lvalue: names

   17 select_statement: SELECT select_args FROM from_arg WHERE where_args
   18                 | SELECT select_args FROM INTERSECT from_args

   19 select_args: STAR
   20            | COUNT
   21            | select_arg_series

   22 select_arg_series: names COMMA select_arg_series
   23                  | names

   24 from_args: from_arg COMMA from_args
   25          | from_arg

   26 from_arg: names

   27 where_args: where_args COMMA where_args
   28           | where_args AND where_args
   29           | where_args OR where_args
   30           | NOT where_args
   31           | LPAREN where_args RPAREN
   32           | lowest_expr

   33 lowest_expr: arith_expr comparison_op rvalue

   34 arith_expr: arith_expr arith_op arith_expr
   35           | arith_op arith_expr
   36           | names
   37           | NUMBER

   38 comparison_op: EQUAL
   39              | GREATER_EQUAL
   40              | LESS_EQUAL
   41              | GREATER
   42              | LESS

   43 arith_op: PLUS
   44         | MINUS
   45         | MUL
   46         | DIV
   47         | MOD

   48 rvalue: CONST_CHAR
   49       | CONST_STRING
   50       | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
CONST_CHAR (258) 48
CONST_STRING (259) 49
NUMBER (260) 37 50
EQUAL (261) 38
ASSIGN (262) 15
STAR (263) 19
GREATER (264) 41
LESS (265) 42
NOT_EQUAL (266)
LESS_EQUAL (267) 40
GREATER_EQUAL (268) 39
MUL (269) 45
DIV (270) 46
MOD (271) 47
PLUS (272) 43
MINUS (273) 44
AND (274) 28
OR (275) 29
NOT (276) 30
SEMICOLON (277) 4
DOT (278)
LPAREN (279) 4 31
RPAREN (280) 4 31
COMMA (281) 7 22 24 27
INTEGER (282) 9
FLOAT (283) 10
CHAR (284) 11
STRING_TYPE (285) 12
ID (286) 6
SELECT (287) 17 18
FROM (288) 17 18
WHERE (289) 17
COUNT (290) 20
TABLE (291) 5
INTERSECT (292) 18
TK_NEGATIVE_SIGN (293)
TK_POSITIVE_SIGN (294)
TK_RIGHT_SQUARE_BRACKET (295)
TK_LEFT_SQUARE_BRACKET (296)
TK_RIGHT_BRACKET (297)
TK_LEFT_BRACKET (298)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
table_prototypes (46)
    on left: 2 3, on right: 1 2
table_prototype (47)
    on left: 4, on right: 2
table_keyword (48)
    on left: 5, on right: 4
names (49)
    on left: 6, on right: 5 9 10 11 12 16 22 23 26 36
table_args (50)
    on left: 7 8, on right: 4 7
table_arg (51)
    on left: 9 10 11 12, on right: 7 8
assigned_selects (52)
    on left: 13 14, on right: 1 13
assigned_select (53)
    on left: 15, on right: 13
lvalue (54)
    on left: 16, on right: 15
select_statement (55)
    on left: 17 18, on right: 1 15
select_args (56)
    on left: 19 20 21, on right: 17 18
select_arg_series (57)
    on left: 22 23, on right: 21 22
from_args (58)
    on left: 24 25, on right: 18 24
from_arg (59)
    on left: 26, on right: 17 24 25
where_args (60)
    on left: 27 28 29 30 31 32, on right: 17 27 28 29 30 31
lowest_expr (61)
    on left: 33, on right: 32
arith_expr (62)
    on left: 34 35 36 37, on right: 33 34 35
comparison_op (63)
    on left: 38 39 40 41 42, on right: 33
arith_op (64)
    on left: 43 44 45 46 47, on right: 34 35
rvalue (65)
    on left: 48 49 50, on right: 33


state 0

    0 $accept: . program $end

    TABLE  shift, and go to state 1

    $default  reduce using rule 3 (table_prototypes)

    program           go to state 2
    table_prototypes  go to state 3
    table_prototype   go to state 4
    table_keyword     go to state 5


state 1

    5 table_keyword: TABLE . names

    ID  shift, and go to state 6

    names  go to state 7


state 2

    0 $accept: program . $end

    $end  shift, and go to state 8


state 3

    1 program: table_prototypes . assigned_selects select_statement

    ID  shift, and go to state 6

    $default  reduce using rule 14 (assigned_selects)

    names             go to state 9
    assigned_selects  go to state 10
    assigned_select   go to state 11
    lvalue            go to state 12


state 4

    2 table_prototypes: table_prototype . table_prototypes

    TABLE  shift, and go to state 1

    $default  reduce using rule 3 (table_prototypes)

    table_prototypes  go to state 13
    table_prototype   go to state 4
    table_keyword     go to state 5


state 5

    4 table_prototype: table_keyword . LPAREN table_args RPAREN SEMICOLON

    LPAREN  shift, and go to state 14


state 6

    6 names: ID .

    $default  reduce using rule 6 (names)


state 7

    5 table_keyword: TABLE names .

    $default  reduce using rule 5 (table_keyword)


state 8

    0 $accept: program $end .

    $default  accept


state 9

   16 lvalue: names .

    $default  reduce using rule 16 (lvalue)


state 10

    1 program: table_prototypes assigned_selects . select_statement

    SELECT  shift, and go to state 15

    select_statement  go to state 16


state 11

   13 assigned_selects: assigned_select . assigned_selects

    ID  shift, and go to state 6

    $default  reduce using rule 14 (assigned_selects)

    names             go to state 9
    assigned_selects  go to state 17
    assigned_select   go to state 11
    lvalue            go to state 12


state 12

   15 assigned_select: lvalue . ASSIGN select_statement

    ASSIGN  shift, and go to state 18


state 13

    2 table_prototypes: table_prototype table_prototypes .

    $default  reduce using rule 2 (table_prototypes)


state 14

    4 table_prototype: table_keyword LPAREN . table_args RPAREN SEMICOLON

    INTEGER      shift, and go to state 19
    FLOAT        shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING_TYPE  shift, and go to state 22

    table_args  go to state 23
    table_arg   go to state 24


state 15

   17 select_statement: SELECT . select_args FROM from_arg WHERE where_args
   18                 | SELECT . select_args FROM INTERSECT from_args

    STAR   shift, and go to state 25
    ID     shift, and go to state 6
    COUNT  shift, and go to state 26

    names              go to state 27
    select_args        go to state 28
    select_arg_series  go to state 29


state 16

    1 program: table_prototypes assigned_selects select_statement .

    $default  reduce using rule 1 (program)


state 17

   13 assigned_selects: assigned_select assigned_selects .

    $default  reduce using rule 13 (assigned_selects)


state 18

   15 assigned_select: lvalue ASSIGN . select_statement

    SELECT  shift, and go to state 15

    select_statement  go to state 30


state 19

    9 table_arg: INTEGER . names

    ID  shift, and go to state 6

    names  go to state 31


state 20

   10 table_arg: FLOAT . names

    ID  shift, and go to state 6

    names  go to state 32


state 21

   11 table_arg: CHAR . names

    ID  shift, and go to state 6

    names  go to state 33


state 22

   12 table_arg: STRING_TYPE . names

    ID  shift, and go to state 6

    names  go to state 34


state 23

    4 table_prototype: table_keyword LPAREN table_args . RPAREN SEMICOLON

    RPAREN  shift, and go to state 35


state 24

    7 table_args: table_arg . COMMA table_args
    8           | table_arg .

    COMMA  shift, and go to state 36

    $default  reduce using rule 8 (table_args)


state 25

   19 select_args: STAR .

    $default  reduce using rule 19 (select_args)


state 26

   20 select_args: COUNT .

    $default  reduce using rule 20 (select_args)


state 27

   22 select_arg_series: names . COMMA select_arg_series
   23                  | names .

    COMMA  shift, and go to state 37

    $default  reduce using rule 23 (select_arg_series)


state 28

   17 select_statement: SELECT select_args . FROM from_arg WHERE where_args
   18                 | SELECT select_args . FROM INTERSECT from_args

    FROM  shift, and go to state 38


state 29

   21 select_args: select_arg_series .

    $default  reduce using rule 21 (select_args)


state 30

   15 assigned_select: lvalue ASSIGN select_statement .

    $default  reduce using rule 15 (assigned_select)


state 31

    9 table_arg: INTEGER names .

    $default  reduce using rule 9 (table_arg)


state 32

   10 table_arg: FLOAT names .

    $default  reduce using rule 10 (table_arg)


state 33

   11 table_arg: CHAR names .

    $default  reduce using rule 11 (table_arg)


state 34

   12 table_arg: STRING_TYPE names .

    $default  reduce using rule 12 (table_arg)


state 35

    4 table_prototype: table_keyword LPAREN table_args RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 36

    7 table_args: table_arg COMMA . table_args

    INTEGER      shift, and go to state 19
    FLOAT        shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING_TYPE  shift, and go to state 22

    table_args  go to state 40
    table_arg   go to state 24


state 37

   22 select_arg_series: names COMMA . select_arg_series

    ID  shift, and go to state 6

    names              go to state 27
    select_arg_series  go to state 41


state 38

   17 select_statement: SELECT select_args FROM . from_arg WHERE where_args
   18                 | SELECT select_args FROM . INTERSECT from_args

    ID         shift, and go to state 6
    INTERSECT  shift, and go to state 42

    names     go to state 43
    from_arg  go to state 44


state 39

    4 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON .

    $default  reduce using rule 4 (table_prototype)


state 40

    7 table_args: table_arg COMMA table_args .

    $default  reduce using rule 7 (table_args)


state 41

   22 select_arg_series: names COMMA select_arg_series .

    $default  reduce using rule 22 (select_arg_series)


state 42

   18 select_statement: SELECT select_args FROM INTERSECT . from_args

    ID  shift, and go to state 6

    names      go to state 43
    from_args  go to state 45
    from_arg   go to state 46


state 43

   26 from_arg: names .

    $default  reduce using rule 26 (from_arg)


state 44

   17 select_statement: SELECT select_args FROM from_arg . WHERE where_args

    WHERE  shift, and go to state 47


state 45

   18 select_statement: SELECT select_args FROM INTERSECT from_args .

    $default  reduce using rule 18 (select_statement)


state 46

   24 from_args: from_arg . COMMA from_args
   25          | from_arg .

    COMMA  shift, and go to state 48

    $default  reduce using rule 25 (from_args)


state 47

   17 select_statement: SELECT select_args FROM from_arg WHERE . where_args

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    NOT     shift, and go to state 55
    LPAREN  shift, and go to state 56
    ID      shift, and go to state 6

    names        go to state 57
    where_args   go to state 58
    lowest_expr  go to state 59
    arith_expr   go to state 60
    arith_op     go to state 61


state 48

   24 from_args: from_arg COMMA . from_args

    ID  shift, and go to state 6

    names      go to state 43
    from_args  go to state 62
    from_arg   go to state 46


state 49

   37 arith_expr: NUMBER .

    $default  reduce using rule 37 (arith_expr)


state 50

   45 arith_op: MUL .

    $default  reduce using rule 45 (arith_op)


state 51

   46 arith_op: DIV .

    $default  reduce using rule 46 (arith_op)


state 52

   47 arith_op: MOD .

    $default  reduce using rule 47 (arith_op)


state 53

   43 arith_op: PLUS .

    $default  reduce using rule 43 (arith_op)


state 54

   44 arith_op: MINUS .

    $default  reduce using rule 44 (arith_op)


state 55

   30 where_args: NOT . where_args

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    NOT     shift, and go to state 55
    LPAREN  shift, and go to state 56
    ID      shift, and go to state 6

    names        go to state 57
    where_args   go to state 63
    lowest_expr  go to state 59
    arith_expr   go to state 60
    arith_op     go to state 61


state 56

   31 where_args: LPAREN . where_args RPAREN

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    NOT     shift, and go to state 55
    LPAREN  shift, and go to state 56
    ID      shift, and go to state 6

    names        go to state 57
    where_args   go to state 64
    lowest_expr  go to state 59
    arith_expr   go to state 60
    arith_op     go to state 61


state 57

   36 arith_expr: names .

    $default  reduce using rule 36 (arith_expr)


state 58

   17 select_statement: SELECT select_args FROM from_arg WHERE where_args .
   27 where_args: where_args . COMMA where_args
   28           | where_args . AND where_args
   29           | where_args . OR where_args

    AND    shift, and go to state 65
    OR     shift, and go to state 66
    COMMA  shift, and go to state 67

    $default  reduce using rule 17 (select_statement)


state 59

   32 where_args: lowest_expr .

    $default  reduce using rule 32 (where_args)


state 60

   33 lowest_expr: arith_expr . comparison_op rvalue
   34 arith_expr: arith_expr . arith_op arith_expr

    EQUAL          shift, and go to state 68
    GREATER        shift, and go to state 69
    LESS           shift, and go to state 70
    LESS_EQUAL     shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    MUL            shift, and go to state 50
    DIV            shift, and go to state 51
    MOD            shift, and go to state 52
    PLUS           shift, and go to state 53
    MINUS          shift, and go to state 54

    comparison_op  go to state 73
    arith_op       go to state 74


state 61

   35 arith_expr: arith_op . arith_expr

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    ID      shift, and go to state 6

    names       go to state 57
    arith_expr  go to state 75
    arith_op    go to state 61


state 62

   24 from_args: from_arg COMMA from_args .

    $default  reduce using rule 24 (from_args)


state 63

   27 where_args: where_args . COMMA where_args
   28           | where_args . AND where_args
   29           | where_args . OR where_args
   30           | NOT where_args .

    COMMA  shift, and go to state 67

    COMMA     [reduce using rule 30 (where_args)]
    $default  reduce using rule 30 (where_args)


state 64

   27 where_args: where_args . COMMA where_args
   28           | where_args . AND where_args
   29           | where_args . OR where_args
   31           | LPAREN where_args . RPAREN

    AND     shift, and go to state 65
    OR      shift, and go to state 66
    RPAREN  shift, and go to state 76
    COMMA   shift, and go to state 67


state 65

   28 where_args: where_args AND . where_args

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    NOT     shift, and go to state 55
    LPAREN  shift, and go to state 56
    ID      shift, and go to state 6

    names        go to state 57
    where_args   go to state 77
    lowest_expr  go to state 59
    arith_expr   go to state 60
    arith_op     go to state 61


state 66

   29 where_args: where_args OR . where_args

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    NOT     shift, and go to state 55
    LPAREN  shift, and go to state 56
    ID      shift, and go to state 6

    names        go to state 57
    where_args   go to state 78
    lowest_expr  go to state 59
    arith_expr   go to state 60
    arith_op     go to state 61


state 67

   27 where_args: where_args COMMA . where_args

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    NOT     shift, and go to state 55
    LPAREN  shift, and go to state 56
    ID      shift, and go to state 6

    names        go to state 57
    where_args   go to state 79
    lowest_expr  go to state 59
    arith_expr   go to state 60
    arith_op     go to state 61


state 68

   38 comparison_op: EQUAL .

    $default  reduce using rule 38 (comparison_op)


state 69

   41 comparison_op: GREATER .

    $default  reduce using rule 41 (comparison_op)


state 70

   42 comparison_op: LESS .

    $default  reduce using rule 42 (comparison_op)


state 71

   40 comparison_op: LESS_EQUAL .

    $default  reduce using rule 40 (comparison_op)


state 72

   39 comparison_op: GREATER_EQUAL .

    $default  reduce using rule 39 (comparison_op)


state 73

   33 lowest_expr: arith_expr comparison_op . rvalue

    CONST_CHAR    shift, and go to state 80
    CONST_STRING  shift, and go to state 81
    NUMBER        shift, and go to state 82

    rvalue  go to state 83


state 74

   34 arith_expr: arith_expr arith_op . arith_expr

    NUMBER  shift, and go to state 49
    MUL     shift, and go to state 50
    DIV     shift, and go to state 51
    MOD     shift, and go to state 52
    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    ID      shift, and go to state 6

    names       go to state 57
    arith_expr  go to state 84
    arith_op    go to state 61


state 75

   34 arith_expr: arith_expr . arith_op arith_expr
   35           | arith_op arith_expr .

    MUL    shift, and go to state 50
    DIV    shift, and go to state 51
    MOD    shift, and go to state 52
    PLUS   shift, and go to state 53
    MINUS  shift, and go to state 54

    MUL       [reduce using rule 35 (arith_expr)]
    DIV       [reduce using rule 35 (arith_expr)]
    MOD       [reduce using rule 35 (arith_expr)]
    PLUS      [reduce using rule 35 (arith_expr)]
    MINUS     [reduce using rule 35 (arith_expr)]
    $default  reduce using rule 35 (arith_expr)

    arith_op  go to state 74


state 76

   31 where_args: LPAREN where_args RPAREN .

    $default  reduce using rule 31 (where_args)


state 77

   27 where_args: where_args . COMMA where_args
   28           | where_args . AND where_args
   28           | where_args AND where_args .
   29           | where_args . OR where_args

    COMMA  shift, and go to state 67

    COMMA     [reduce using rule 28 (where_args)]
    $default  reduce using rule 28 (where_args)


state 78

   27 where_args: where_args . COMMA where_args
   28           | where_args . AND where_args
   29           | where_args . OR where_args
   29           | where_args OR where_args .

    AND    shift, and go to state 65
    COMMA  shift, and go to state 67

    COMMA     [reduce using rule 29 (where_args)]
    $default  reduce using rule 29 (where_args)


state 79

   27 where_args: where_args . COMMA where_args
   27           | where_args COMMA where_args .
   28           | where_args . AND where_args
   29           | where_args . OR where_args

    AND    shift, and go to state 65
    OR     shift, and go to state 66
    COMMA  shift, and go to state 67

    AND       [reduce using rule 27 (where_args)]
    OR        [reduce using rule 27 (where_args)]
    COMMA     [reduce using rule 27 (where_args)]
    $default  reduce using rule 27 (where_args)


state 80

   48 rvalue: CONST_CHAR .

    $default  reduce using rule 48 (rvalue)


state 81

   49 rvalue: CONST_STRING .

    $default  reduce using rule 49 (rvalue)


state 82

   50 rvalue: NUMBER .

    $default  reduce using rule 50 (rvalue)


state 83

   33 lowest_expr: arith_expr comparison_op rvalue .

    $default  reduce using rule 33 (lowest_expr)


state 84

   34 arith_expr: arith_expr . arith_op arith_expr
   34           | arith_expr arith_op arith_expr .

    MUL    shift, and go to state 50
    DIV    shift, and go to state 51
    MOD    shift, and go to state 52
    PLUS   shift, and go to state 53
    MINUS  shift, and go to state 54

    MUL       [reduce using rule 34 (arith_expr)]
    DIV       [reduce using rule 34 (arith_expr)]
    MOD       [reduce using rule 34 (arith_expr)]
    PLUS      [reduce using rule 34 (arith_expr)]
    MINUS     [reduce using rule 34 (arith_expr)]
    $default  reduce using rule 34 (arith_expr)

    arith_op  go to state 74
