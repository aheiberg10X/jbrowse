Terminals unused in grammar

   NOT_EQUAL
   TK_NEGATIVE_SIGN
   TK_POSITIVE_SIGN
   TK_RIGHT_SQUARE_BRACKET
   TK_LEFT_SQUARE_BRACKET
   TK_RIGHT_BRACKET
   TK_LEFT_BRACKET


State 24 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 92 conflicts: 5 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 3 shift/reduce
State 103 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: table_source import_tables assigned_selects select_statement
    2        | table_prototypes

    3 table_prototypes: table_prototype table_prototypes
    4                 | /* empty */

    5 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON

    6 table_keyword: TABLE names

    7 names: ID

    8 table_args: table_args COMMA table_arg
    9           | table_arg

   10 table_arg: INTEGER names
   11          | FLOAT names
   12          | CHAR names
   13          | STRING_TYPE names

   14 table_source: USE names

   15 import_tables: import_tables import_tables
   16              | IMPORT names SEMICOLON

   17 assigned_selects: assigned_select assigned_selects
   18                 | /* empty */

   19 assigned_select: lvalue ASSIGN select_statement

   20 lvalue: names

   21 select_statement: SELECT select_args FROM compound_from_arg WHERE where_args
   22                 | SELECT select_args FROM compound_from_arg
   23                 | SELECT select_args FROM MAPJOIN from_args

   24 select_args: STAR
   25            | COUNT
   26            | select_arg_series

   27 select_arg_series: names COMMA select_arg_series
   28                  | names
   29                  | obj_names

   30 from_args: compound_from_arg COMMA from_args
   31          | compound_from_arg

   32 compound_from_arg: from_arg
   33                  | from_arg LPAREN arith_expr COMMA arith_expr RPAREN
   34                  | from_arg MATES LPAREN arith_expr COMMA arith_expr RPAREN

   35 from_arg: names

   36 where_args: where_args COMMA where_args
   37           | where_args AND where_args
   38           | where_args OR where_args
   39           | NOT where_args
   40           | LPAREN where_args RPAREN
   41           | lowest_expr

   42 lowest_expr: arith_expr comparison_op rvalue

   43 arith_expr: arith_expr arith_op arith_expr
   44           | arith_op arith_expr
   45           | names
   46           | obj_names
   47           | NUMBER

   48 obj_names: names DOT names

   49 comparison_op: EQUAL
   50              | GREATER_EQUAL
   51              | LESS_EQUAL
   52              | GREATER
   53              | LESS

   54 arith_op: PLUS
   55         | MINUS
   56         | MUL
   57         | DIV
   58         | MOD

   59 rvalue: CONST_CHAR
   60       | CONST_STRING
   61       | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
CONST_CHAR (258) 59
CONST_STRING (259) 60
NUMBER (260) 47 61
EQUAL (261) 49
ASSIGN (262) 19
STAR (263) 24
GREATER (264) 52
LESS (265) 53
NOT_EQUAL (266)
LESS_EQUAL (267) 51
GREATER_EQUAL (268) 50
MUL (269) 56
DIV (270) 57
MOD (271) 58
PLUS (272) 54
MINUS (273) 55
AND (274) 37
OR (275) 38
NOT (276) 39
SEMICOLON (277) 5 16
DOT (278) 48
LPAREN (279) 5 33 34 40
RPAREN (280) 5 33 34 40
COMMA (281) 8 27 30 33 34 36
INTEGER (282) 10
FLOAT (283) 11
CHAR (284) 12
STRING_TYPE (285) 13
ID (286) 7
SELECT (287) 21 22 23
FROM (288) 21 22 23
WHERE (289) 21
COUNT (290) 25
TABLE (291) 6
MAPJOIN (292) 23
IMPORT (293) 16
USE (294) 14
MATES (295) 34
TK_NEGATIVE_SIGN (296)
TK_POSITIVE_SIGN (297)
TK_RIGHT_SQUARE_BRACKET (298)
TK_LEFT_SQUARE_BRACKET (299)
TK_RIGHT_BRACKET (300)
TK_LEFT_BRACKET (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0
table_prototypes (49)
    on left: 3 4, on right: 2 3
table_prototype (50)
    on left: 5, on right: 3
table_keyword (51)
    on left: 6, on right: 5
names (52)
    on left: 7, on right: 6 10 11 12 13 14 16 20 27 28 35 45 48
table_args (53)
    on left: 8 9, on right: 5 8
table_arg (54)
    on left: 10 11 12 13, on right: 8 9
table_source (55)
    on left: 14, on right: 1
import_tables (56)
    on left: 15 16, on right: 1 15
assigned_selects (57)
    on left: 17 18, on right: 1 17
assigned_select (58)
    on left: 19, on right: 17
lvalue (59)
    on left: 20, on right: 19
select_statement (60)
    on left: 21 22 23, on right: 1 19
select_args (61)
    on left: 24 25 26, on right: 21 22 23
select_arg_series (62)
    on left: 27 28 29, on right: 26 27
from_args (63)
    on left: 30 31, on right: 23 30
compound_from_arg (64)
    on left: 32 33 34, on right: 21 22 30 31
from_arg (65)
    on left: 35, on right: 32 33 34
where_args (66)
    on left: 36 37 38 39 40 41, on right: 21 36 37 38 39 40
lowest_expr (67)
    on left: 42, on right: 41
arith_expr (68)
    on left: 43 44 45 46 47, on right: 33 34 42 43 44
obj_names (69)
    on left: 48, on right: 29 46
comparison_op (70)
    on left: 49 50 51 52 53, on right: 42
arith_op (71)
    on left: 54 55 56 57 58, on right: 43 44
rvalue (72)
    on left: 59 60 61, on right: 42


state 0

    0 $accept: . program $end

    TABLE  shift, and go to state 1
    USE    shift, and go to state 2

    $default  reduce using rule 4 (table_prototypes)

    program           go to state 3
    table_prototypes  go to state 4
    table_prototype   go to state 5
    table_keyword     go to state 6
    table_source      go to state 7


state 1

    6 table_keyword: TABLE . names

    ID  shift, and go to state 8

    names  go to state 9


state 2

   14 table_source: USE . names

    ID  shift, and go to state 8

    names  go to state 10


state 3

    0 $accept: program . $end

    $end  shift, and go to state 11


state 4

    2 program: table_prototypes .

    $default  reduce using rule 2 (program)


state 5

    3 table_prototypes: table_prototype . table_prototypes

    TABLE  shift, and go to state 1

    $default  reduce using rule 4 (table_prototypes)

    table_prototypes  go to state 12
    table_prototype   go to state 5
    table_keyword     go to state 6


state 6

    5 table_prototype: table_keyword . LPAREN table_args RPAREN SEMICOLON

    LPAREN  shift, and go to state 13


state 7

    1 program: table_source . import_tables assigned_selects select_statement

    IMPORT  shift, and go to state 14

    import_tables  go to state 15


state 8

    7 names: ID .

    $default  reduce using rule 7 (names)


state 9

    6 table_keyword: TABLE names .

    $default  reduce using rule 6 (table_keyword)


state 10

   14 table_source: USE names .

    $default  reduce using rule 14 (table_source)


state 11

    0 $accept: program $end .

    $default  accept


state 12

    3 table_prototypes: table_prototype table_prototypes .

    $default  reduce using rule 3 (table_prototypes)


state 13

    5 table_prototype: table_keyword LPAREN . table_args RPAREN SEMICOLON

    INTEGER      shift, and go to state 16
    FLOAT        shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING_TYPE  shift, and go to state 19

    table_args  go to state 20
    table_arg   go to state 21


state 14

   16 import_tables: IMPORT . names SEMICOLON

    ID  shift, and go to state 8

    names  go to state 22


state 15

    1 program: table_source import_tables . assigned_selects select_statement
   15 import_tables: import_tables . import_tables

    ID      shift, and go to state 8
    IMPORT  shift, and go to state 14

    $default  reduce using rule 18 (assigned_selects)

    names             go to state 23
    import_tables     go to state 24
    assigned_selects  go to state 25
    assigned_select   go to state 26
    lvalue            go to state 27


state 16

   10 table_arg: INTEGER . names

    ID  shift, and go to state 8

    names  go to state 28


state 17

   11 table_arg: FLOAT . names

    ID  shift, and go to state 8

    names  go to state 29


state 18

   12 table_arg: CHAR . names

    ID  shift, and go to state 8

    names  go to state 30


state 19

   13 table_arg: STRING_TYPE . names

    ID  shift, and go to state 8

    names  go to state 31


state 20

    5 table_prototype: table_keyword LPAREN table_args . RPAREN SEMICOLON
    8 table_args: table_args . COMMA table_arg

    RPAREN  shift, and go to state 32
    COMMA   shift, and go to state 33


state 21

    9 table_args: table_arg .

    $default  reduce using rule 9 (table_args)


state 22

   16 import_tables: IMPORT names . SEMICOLON

    SEMICOLON  shift, and go to state 34


state 23

   20 lvalue: names .

    $default  reduce using rule 20 (lvalue)


state 24

   15 import_tables: import_tables . import_tables
   15              | import_tables import_tables .

    IMPORT  shift, and go to state 14

    IMPORT    [reduce using rule 15 (import_tables)]
    $default  reduce using rule 15 (import_tables)

    import_tables  go to state 24


state 25

    1 program: table_source import_tables assigned_selects . select_statement

    SELECT  shift, and go to state 35

    select_statement  go to state 36


state 26

   17 assigned_selects: assigned_select . assigned_selects

    ID  shift, and go to state 8

    $default  reduce using rule 18 (assigned_selects)

    names             go to state 23
    assigned_selects  go to state 37
    assigned_select   go to state 26
    lvalue            go to state 27


state 27

   19 assigned_select: lvalue . ASSIGN select_statement

    ASSIGN  shift, and go to state 38


state 28

   10 table_arg: INTEGER names .

    $default  reduce using rule 10 (table_arg)


state 29

   11 table_arg: FLOAT names .

    $default  reduce using rule 11 (table_arg)


state 30

   12 table_arg: CHAR names .

    $default  reduce using rule 12 (table_arg)


state 31

   13 table_arg: STRING_TYPE names .

    $default  reduce using rule 13 (table_arg)


state 32

    5 table_prototype: table_keyword LPAREN table_args RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 33

    8 table_args: table_args COMMA . table_arg

    INTEGER      shift, and go to state 16
    FLOAT        shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING_TYPE  shift, and go to state 19

    table_arg  go to state 40


state 34

   16 import_tables: IMPORT names SEMICOLON .

    $default  reduce using rule 16 (import_tables)


state 35

   21 select_statement: SELECT . select_args FROM compound_from_arg WHERE where_args
   22                 | SELECT . select_args FROM compound_from_arg
   23                 | SELECT . select_args FROM MAPJOIN from_args

    STAR   shift, and go to state 41
    ID     shift, and go to state 8
    COUNT  shift, and go to state 42

    names              go to state 43
    select_args        go to state 44
    select_arg_series  go to state 45
    obj_names          go to state 46


state 36

    1 program: table_source import_tables assigned_selects select_statement .

    $default  reduce using rule 1 (program)


state 37

   17 assigned_selects: assigned_select assigned_selects .

    $default  reduce using rule 17 (assigned_selects)


state 38

   19 assigned_select: lvalue ASSIGN . select_statement

    SELECT  shift, and go to state 35

    select_statement  go to state 47


state 39

    5 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON .

    $default  reduce using rule 5 (table_prototype)


state 40

    8 table_args: table_args COMMA table_arg .

    $default  reduce using rule 8 (table_args)


state 41

   24 select_args: STAR .

    $default  reduce using rule 24 (select_args)


state 42

   25 select_args: COUNT .

    $default  reduce using rule 25 (select_args)


state 43

   27 select_arg_series: names . COMMA select_arg_series
   28                  | names .
   48 obj_names: names . DOT names

    DOT    shift, and go to state 48
    COMMA  shift, and go to state 49

    $default  reduce using rule 28 (select_arg_series)


state 44

   21 select_statement: SELECT select_args . FROM compound_from_arg WHERE where_args
   22                 | SELECT select_args . FROM compound_from_arg
   23                 | SELECT select_args . FROM MAPJOIN from_args

    FROM  shift, and go to state 50


state 45

   26 select_args: select_arg_series .

    $default  reduce using rule 26 (select_args)


state 46

   29 select_arg_series: obj_names .

    $default  reduce using rule 29 (select_arg_series)


state 47

   19 assigned_select: lvalue ASSIGN select_statement .

    $default  reduce using rule 19 (assigned_select)


state 48

   48 obj_names: names DOT . names

    ID  shift, and go to state 8

    names  go to state 51


state 49

   27 select_arg_series: names COMMA . select_arg_series

    ID  shift, and go to state 8

    names              go to state 43
    select_arg_series  go to state 52
    obj_names          go to state 46


state 50

   21 select_statement: SELECT select_args FROM . compound_from_arg WHERE where_args
   22                 | SELECT select_args FROM . compound_from_arg
   23                 | SELECT select_args FROM . MAPJOIN from_args

    ID       shift, and go to state 8
    MAPJOIN  shift, and go to state 53

    names              go to state 54
    compound_from_arg  go to state 55
    from_arg           go to state 56


state 51

   48 obj_names: names DOT names .

    $default  reduce using rule 48 (obj_names)


state 52

   27 select_arg_series: names COMMA select_arg_series .

    $default  reduce using rule 27 (select_arg_series)


state 53

   23 select_statement: SELECT select_args FROM MAPJOIN . from_args

    ID  shift, and go to state 8

    names              go to state 54
    from_args          go to state 57
    compound_from_arg  go to state 58
    from_arg           go to state 56


state 54

   35 from_arg: names .

    $default  reduce using rule 35 (from_arg)


state 55

   21 select_statement: SELECT select_args FROM compound_from_arg . WHERE where_args
   22                 | SELECT select_args FROM compound_from_arg .

    WHERE  shift, and go to state 59

    $default  reduce using rule 22 (select_statement)


state 56

   32 compound_from_arg: from_arg .
   33                  | from_arg . LPAREN arith_expr COMMA arith_expr RPAREN
   34                  | from_arg . MATES LPAREN arith_expr COMMA arith_expr RPAREN

    LPAREN  shift, and go to state 60
    MATES   shift, and go to state 61

    $default  reduce using rule 32 (compound_from_arg)


state 57

   23 select_statement: SELECT select_args FROM MAPJOIN from_args .

    $default  reduce using rule 23 (select_statement)


state 58

   30 from_args: compound_from_arg . COMMA from_args
   31          | compound_from_arg .

    COMMA  shift, and go to state 62

    $default  reduce using rule 31 (from_args)


state 59

   21 select_statement: SELECT select_args FROM compound_from_arg WHERE . where_args

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    NOT     shift, and go to state 69
    LPAREN  shift, and go to state 70
    ID      shift, and go to state 8

    names        go to state 71
    where_args   go to state 72
    lowest_expr  go to state 73
    arith_expr   go to state 74
    obj_names    go to state 75
    arith_op     go to state 76


state 60

   33 compound_from_arg: from_arg LPAREN . arith_expr COMMA arith_expr RPAREN

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    ID      shift, and go to state 8

    names       go to state 71
    arith_expr  go to state 77
    obj_names   go to state 75
    arith_op    go to state 76


state 61

   34 compound_from_arg: from_arg MATES . LPAREN arith_expr COMMA arith_expr RPAREN

    LPAREN  shift, and go to state 78


state 62

   30 from_args: compound_from_arg COMMA . from_args

    ID  shift, and go to state 8

    names              go to state 54
    from_args          go to state 79
    compound_from_arg  go to state 58
    from_arg           go to state 56


state 63

   47 arith_expr: NUMBER .

    $default  reduce using rule 47 (arith_expr)


state 64

   56 arith_op: MUL .

    $default  reduce using rule 56 (arith_op)


state 65

   57 arith_op: DIV .

    $default  reduce using rule 57 (arith_op)


state 66

   58 arith_op: MOD .

    $default  reduce using rule 58 (arith_op)


state 67

   54 arith_op: PLUS .

    $default  reduce using rule 54 (arith_op)


state 68

   55 arith_op: MINUS .

    $default  reduce using rule 55 (arith_op)


state 69

   39 where_args: NOT . where_args

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    NOT     shift, and go to state 69
    LPAREN  shift, and go to state 70
    ID      shift, and go to state 8

    names        go to state 71
    where_args   go to state 80
    lowest_expr  go to state 73
    arith_expr   go to state 74
    obj_names    go to state 75
    arith_op     go to state 76


state 70

   40 where_args: LPAREN . where_args RPAREN

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    NOT     shift, and go to state 69
    LPAREN  shift, and go to state 70
    ID      shift, and go to state 8

    names        go to state 71
    where_args   go to state 81
    lowest_expr  go to state 73
    arith_expr   go to state 74
    obj_names    go to state 75
    arith_op     go to state 76


state 71

   45 arith_expr: names .
   48 obj_names: names . DOT names

    DOT  shift, and go to state 48

    $default  reduce using rule 45 (arith_expr)


state 72

   21 select_statement: SELECT select_args FROM compound_from_arg WHERE where_args .
   36 where_args: where_args . COMMA where_args
   37           | where_args . AND where_args
   38           | where_args . OR where_args

    AND    shift, and go to state 82
    OR     shift, and go to state 83
    COMMA  shift, and go to state 84

    $default  reduce using rule 21 (select_statement)


state 73

   41 where_args: lowest_expr .

    $default  reduce using rule 41 (where_args)


state 74

   42 lowest_expr: arith_expr . comparison_op rvalue
   43 arith_expr: arith_expr . arith_op arith_expr

    EQUAL          shift, and go to state 85
    GREATER        shift, and go to state 86
    LESS           shift, and go to state 87
    LESS_EQUAL     shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    MUL            shift, and go to state 64
    DIV            shift, and go to state 65
    MOD            shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68

    comparison_op  go to state 90
    arith_op       go to state 91


state 75

   46 arith_expr: obj_names .

    $default  reduce using rule 46 (arith_expr)


state 76

   44 arith_expr: arith_op . arith_expr

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    ID      shift, and go to state 8

    names       go to state 71
    arith_expr  go to state 92
    obj_names   go to state 75
    arith_op    go to state 76


state 77

   33 compound_from_arg: from_arg LPAREN arith_expr . COMMA arith_expr RPAREN
   43 arith_expr: arith_expr . arith_op arith_expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MOD    shift, and go to state 66
    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    COMMA  shift, and go to state 93

    arith_op  go to state 91


state 78

   34 compound_from_arg: from_arg MATES LPAREN . arith_expr COMMA arith_expr RPAREN

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    ID      shift, and go to state 8

    names       go to state 71
    arith_expr  go to state 94
    obj_names   go to state 75
    arith_op    go to state 76


state 79

   30 from_args: compound_from_arg COMMA from_args .

    $default  reduce using rule 30 (from_args)


state 80

   36 where_args: where_args . COMMA where_args
   37           | where_args . AND where_args
   38           | where_args . OR where_args
   39           | NOT where_args .

    COMMA  shift, and go to state 84

    COMMA     [reduce using rule 39 (where_args)]
    $default  reduce using rule 39 (where_args)


state 81

   36 where_args: where_args . COMMA where_args
   37           | where_args . AND where_args
   38           | where_args . OR where_args
   40           | LPAREN where_args . RPAREN

    AND     shift, and go to state 82
    OR      shift, and go to state 83
    RPAREN  shift, and go to state 95
    COMMA   shift, and go to state 84


state 82

   37 where_args: where_args AND . where_args

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    NOT     shift, and go to state 69
    LPAREN  shift, and go to state 70
    ID      shift, and go to state 8

    names        go to state 71
    where_args   go to state 96
    lowest_expr  go to state 73
    arith_expr   go to state 74
    obj_names    go to state 75
    arith_op     go to state 76


state 83

   38 where_args: where_args OR . where_args

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    NOT     shift, and go to state 69
    LPAREN  shift, and go to state 70
    ID      shift, and go to state 8

    names        go to state 71
    where_args   go to state 97
    lowest_expr  go to state 73
    arith_expr   go to state 74
    obj_names    go to state 75
    arith_op     go to state 76


state 84

   36 where_args: where_args COMMA . where_args

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    NOT     shift, and go to state 69
    LPAREN  shift, and go to state 70
    ID      shift, and go to state 8

    names        go to state 71
    where_args   go to state 98
    lowest_expr  go to state 73
    arith_expr   go to state 74
    obj_names    go to state 75
    arith_op     go to state 76


state 85

   49 comparison_op: EQUAL .

    $default  reduce using rule 49 (comparison_op)


state 86

   52 comparison_op: GREATER .

    $default  reduce using rule 52 (comparison_op)


state 87

   53 comparison_op: LESS .

    $default  reduce using rule 53 (comparison_op)


state 88

   51 comparison_op: LESS_EQUAL .

    $default  reduce using rule 51 (comparison_op)


state 89

   50 comparison_op: GREATER_EQUAL .

    $default  reduce using rule 50 (comparison_op)


state 90

   42 lowest_expr: arith_expr comparison_op . rvalue

    CONST_CHAR    shift, and go to state 99
    CONST_STRING  shift, and go to state 100
    NUMBER        shift, and go to state 101

    rvalue  go to state 102


state 91

   43 arith_expr: arith_expr arith_op . arith_expr

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    ID      shift, and go to state 8

    names       go to state 71
    arith_expr  go to state 103
    obj_names   go to state 75
    arith_op    go to state 76


state 92

   43 arith_expr: arith_expr . arith_op arith_expr
   44           | arith_op arith_expr .

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MOD    shift, and go to state 66
    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68

    MUL       [reduce using rule 44 (arith_expr)]
    DIV       [reduce using rule 44 (arith_expr)]
    MOD       [reduce using rule 44 (arith_expr)]
    PLUS      [reduce using rule 44 (arith_expr)]
    MINUS     [reduce using rule 44 (arith_expr)]
    $default  reduce using rule 44 (arith_expr)

    arith_op  go to state 91


state 93

   33 compound_from_arg: from_arg LPAREN arith_expr COMMA . arith_expr RPAREN

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    ID      shift, and go to state 8

    names       go to state 71
    arith_expr  go to state 104
    obj_names   go to state 75
    arith_op    go to state 76


state 94

   34 compound_from_arg: from_arg MATES LPAREN arith_expr . COMMA arith_expr RPAREN
   43 arith_expr: arith_expr . arith_op arith_expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MOD    shift, and go to state 66
    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    COMMA  shift, and go to state 105

    arith_op  go to state 91


state 95

   40 where_args: LPAREN where_args RPAREN .

    $default  reduce using rule 40 (where_args)


state 96

   36 where_args: where_args . COMMA where_args
   37           | where_args . AND where_args
   37           | where_args AND where_args .
   38           | where_args . OR where_args

    COMMA  shift, and go to state 84

    COMMA     [reduce using rule 37 (where_args)]
    $default  reduce using rule 37 (where_args)


state 97

   36 where_args: where_args . COMMA where_args
   37           | where_args . AND where_args
   38           | where_args . OR where_args
   38           | where_args OR where_args .

    AND    shift, and go to state 82
    COMMA  shift, and go to state 84

    COMMA     [reduce using rule 38 (where_args)]
    $default  reduce using rule 38 (where_args)


state 98

   36 where_args: where_args . COMMA where_args
   36           | where_args COMMA where_args .
   37           | where_args . AND where_args
   38           | where_args . OR where_args

    AND    shift, and go to state 82
    OR     shift, and go to state 83
    COMMA  shift, and go to state 84

    AND       [reduce using rule 36 (where_args)]
    OR        [reduce using rule 36 (where_args)]
    COMMA     [reduce using rule 36 (where_args)]
    $default  reduce using rule 36 (where_args)


state 99

   59 rvalue: CONST_CHAR .

    $default  reduce using rule 59 (rvalue)


state 100

   60 rvalue: CONST_STRING .

    $default  reduce using rule 60 (rvalue)


state 101

   61 rvalue: NUMBER .

    $default  reduce using rule 61 (rvalue)


state 102

   42 lowest_expr: arith_expr comparison_op rvalue .

    $default  reduce using rule 42 (lowest_expr)


state 103

   43 arith_expr: arith_expr . arith_op arith_expr
   43           | arith_expr arith_op arith_expr .

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MOD    shift, and go to state 66
    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68

    MUL       [reduce using rule 43 (arith_expr)]
    DIV       [reduce using rule 43 (arith_expr)]
    MOD       [reduce using rule 43 (arith_expr)]
    PLUS      [reduce using rule 43 (arith_expr)]
    MINUS     [reduce using rule 43 (arith_expr)]
    $default  reduce using rule 43 (arith_expr)

    arith_op  go to state 91


state 104

   33 compound_from_arg: from_arg LPAREN arith_expr COMMA arith_expr . RPAREN
   43 arith_expr: arith_expr . arith_op arith_expr

    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    RPAREN  shift, and go to state 106

    arith_op  go to state 91


state 105

   34 compound_from_arg: from_arg MATES LPAREN arith_expr COMMA . arith_expr RPAREN

    NUMBER  shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    ID      shift, and go to state 8

    names       go to state 71
    arith_expr  go to state 107
    obj_names   go to state 75
    arith_op    go to state 76


state 106

   33 compound_from_arg: from_arg LPAREN arith_expr COMMA arith_expr RPAREN .

    $default  reduce using rule 33 (compound_from_arg)


state 107

   34 compound_from_arg: from_arg MATES LPAREN arith_expr COMMA arith_expr . RPAREN
   43 arith_expr: arith_expr . arith_op arith_expr

    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66
    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    RPAREN  shift, and go to state 108

    arith_op  go to state 91


state 108

   34 compound_from_arg: from_arg MATES LPAREN arith_expr COMMA arith_expr RPAREN .

    $default  reduce using rule 34 (compound_from_arg)
