Terminals unused in grammar

   NOT_EQUAL
   DOT
   TK_NEGATIVE_SIGN
   TK_POSITIVE_SIGN
   TK_RIGHT_SQUARE_BRACKET
   TK_LEFT_SQUARE_BRACKET
   TK_RIGHT_BRACKET
   TK_LEFT_BRACKET


State 61 conflicts: 1 shift/reduce
State 73 conflicts: 5 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 3 shift/reduce
State 82 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: table_prototypes assigned_selects select_statement

    2 table_prototypes: table_prototype table_prototypes
    3                 | /* empty */

    4 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON

    5 table_keyword: TABLE names

    6 names: ID

    7 table_args: table_arg COMMA table_args
    8           | table_arg

    9 table_arg: INTEGER names
   10          | FLOAT names
   11          | CHAR names
   12          | STRING_TYPE names

   13 assigned_selects: assigned_select assigned_selects
   14                 | /* empty */

   15 assigned_select: lvalue ASSIGN select_statement

   16 lvalue: names

   17 select_statement: SELECT select_args FROM from_args WHERE where_args

   18 select_args: STAR
   19            | COUNT
   20            | select_arg_series

   21 select_arg_series: names COMMA select_arg_series
   22                  | names

   23 from_args: from_arg COMMA from_args
   24          | from_arg

   25 from_arg: names

   26 where_args: where_args COMMA where_args
   27           | where_args AND where_args
   28           | where_args OR where_args
   29           | NOT where_args
   30           | LPAREN where_args RPAREN
   31           | lowest_expr

   32 lowest_expr: arith_expr comparison_op rvalue

   33 arith_expr: arith_expr arith_op arith_expr
   34           | arith_op arith_expr
   35           | names
   36           | NUMBER

   37 comparison_op: EQUAL
   38              | GREATER_EQUAL
   39              | LESS_EQUAL
   40              | GREATER
   41              | LESS

   42 arith_op: PLUS
   43         | MINUS
   44         | MUL
   45         | DIV
   46         | MOD

   47 rvalue: CONST_CHAR
   48       | CONST_STRING
   49       | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
CONST_CHAR (258) 47
CONST_STRING (259) 48
NUMBER (260) 36 49
EQUAL (261) 37
ASSIGN (262) 15
STAR (263) 18
GREATER (264) 40
LESS (265) 41
NOT_EQUAL (266)
LESS_EQUAL (267) 39
GREATER_EQUAL (268) 38
MUL (269) 44
DIV (270) 45
MOD (271) 46
PLUS (272) 42
MINUS (273) 43
AND (274) 27
OR (275) 28
NOT (276) 29
SEMICOLON (277) 4
DOT (278)
LPAREN (279) 4 30
RPAREN (280) 4 30
COMMA (281) 7 21 23 26
INTEGER (282) 9
FLOAT (283) 10
CHAR (284) 11
STRING_TYPE (285) 12
ID (286) 6
SELECT (287) 17
FROM (288) 17
WHERE (289) 17
COUNT (290) 19
TABLE (291) 5
TK_NEGATIVE_SIGN (292)
TK_POSITIVE_SIGN (293)
TK_RIGHT_SQUARE_BRACKET (294)
TK_LEFT_SQUARE_BRACKET (295)
TK_RIGHT_BRACKET (296)
TK_LEFT_BRACKET (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
table_prototypes (45)
    on left: 2 3, on right: 1 2
table_prototype (46)
    on left: 4, on right: 2
table_keyword (47)
    on left: 5, on right: 4
names (48)
    on left: 6, on right: 5 9 10 11 12 16 21 22 25 35
table_args (49)
    on left: 7 8, on right: 4 7
table_arg (50)
    on left: 9 10 11 12, on right: 7 8
assigned_selects (51)
    on left: 13 14, on right: 1 13
assigned_select (52)
    on left: 15, on right: 13
lvalue (53)
    on left: 16, on right: 15
select_statement (54)
    on left: 17, on right: 1 15
select_args (55)
    on left: 18 19 20, on right: 17
select_arg_series (56)
    on left: 21 22, on right: 20 21
from_args (57)
    on left: 23 24, on right: 17 23
from_arg (58)
    on left: 25, on right: 23 24
where_args (59)
    on left: 26 27 28 29 30 31, on right: 17 26 27 28 29 30
lowest_expr (60)
    on left: 32, on right: 31
arith_expr (61)
    on left: 33 34 35 36, on right: 32 33 34
comparison_op (62)
    on left: 37 38 39 40 41, on right: 32
arith_op (63)
    on left: 42 43 44 45 46, on right: 33 34
rvalue (64)
    on left: 47 48 49, on right: 32


state 0

    0 $accept: . program $end

    TABLE  shift, and go to state 1

    $default  reduce using rule 3 (table_prototypes)

    program           go to state 2
    table_prototypes  go to state 3
    table_prototype   go to state 4
    table_keyword     go to state 5


state 1

    5 table_keyword: TABLE . names

    ID  shift, and go to state 6

    names  go to state 7


state 2

    0 $accept: program . $end

    $end  shift, and go to state 8


state 3

    1 program: table_prototypes . assigned_selects select_statement

    ID  shift, and go to state 6

    $default  reduce using rule 14 (assigned_selects)

    names             go to state 9
    assigned_selects  go to state 10
    assigned_select   go to state 11
    lvalue            go to state 12


state 4

    2 table_prototypes: table_prototype . table_prototypes

    TABLE  shift, and go to state 1

    $default  reduce using rule 3 (table_prototypes)

    table_prototypes  go to state 13
    table_prototype   go to state 4
    table_keyword     go to state 5


state 5

    4 table_prototype: table_keyword . LPAREN table_args RPAREN SEMICOLON

    LPAREN  shift, and go to state 14


state 6

    6 names: ID .

    $default  reduce using rule 6 (names)


state 7

    5 table_keyword: TABLE names .

    $default  reduce using rule 5 (table_keyword)


state 8

    0 $accept: program $end .

    $default  accept


state 9

   16 lvalue: names .

    $default  reduce using rule 16 (lvalue)


state 10

    1 program: table_prototypes assigned_selects . select_statement

    SELECT  shift, and go to state 15

    select_statement  go to state 16


state 11

   13 assigned_selects: assigned_select . assigned_selects

    ID  shift, and go to state 6

    $default  reduce using rule 14 (assigned_selects)

    names             go to state 9
    assigned_selects  go to state 17
    assigned_select   go to state 11
    lvalue            go to state 12


state 12

   15 assigned_select: lvalue . ASSIGN select_statement

    ASSIGN  shift, and go to state 18


state 13

    2 table_prototypes: table_prototype table_prototypes .

    $default  reduce using rule 2 (table_prototypes)


state 14

    4 table_prototype: table_keyword LPAREN . table_args RPAREN SEMICOLON

    INTEGER      shift, and go to state 19
    FLOAT        shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING_TYPE  shift, and go to state 22

    table_args  go to state 23
    table_arg   go to state 24


state 15

   17 select_statement: SELECT . select_args FROM from_args WHERE where_args

    STAR   shift, and go to state 25
    ID     shift, and go to state 6
    COUNT  shift, and go to state 26

    names              go to state 27
    select_args        go to state 28
    select_arg_series  go to state 29


state 16

    1 program: table_prototypes assigned_selects select_statement .

    $default  reduce using rule 1 (program)


state 17

   13 assigned_selects: assigned_select assigned_selects .

    $default  reduce using rule 13 (assigned_selects)


state 18

   15 assigned_select: lvalue ASSIGN . select_statement

    SELECT  shift, and go to state 15

    select_statement  go to state 30


state 19

    9 table_arg: INTEGER . names

    ID  shift, and go to state 6

    names  go to state 31


state 20

   10 table_arg: FLOAT . names

    ID  shift, and go to state 6

    names  go to state 32


state 21

   11 table_arg: CHAR . names

    ID  shift, and go to state 6

    names  go to state 33


state 22

   12 table_arg: STRING_TYPE . names

    ID  shift, and go to state 6

    names  go to state 34


state 23

    4 table_prototype: table_keyword LPAREN table_args . RPAREN SEMICOLON

    RPAREN  shift, and go to state 35


state 24

    7 table_args: table_arg . COMMA table_args
    8           | table_arg .

    COMMA  shift, and go to state 36

    $default  reduce using rule 8 (table_args)


state 25

   18 select_args: STAR .

    $default  reduce using rule 18 (select_args)


state 26

   19 select_args: COUNT .

    $default  reduce using rule 19 (select_args)


state 27

   21 select_arg_series: names . COMMA select_arg_series
   22                  | names .

    COMMA  shift, and go to state 37

    $default  reduce using rule 22 (select_arg_series)


state 28

   17 select_statement: SELECT select_args . FROM from_args WHERE where_args

    FROM  shift, and go to state 38


state 29

   20 select_args: select_arg_series .

    $default  reduce using rule 20 (select_args)


state 30

   15 assigned_select: lvalue ASSIGN select_statement .

    $default  reduce using rule 15 (assigned_select)


state 31

    9 table_arg: INTEGER names .

    $default  reduce using rule 9 (table_arg)


state 32

   10 table_arg: FLOAT names .

    $default  reduce using rule 10 (table_arg)


state 33

   11 table_arg: CHAR names .

    $default  reduce using rule 11 (table_arg)


state 34

   12 table_arg: STRING_TYPE names .

    $default  reduce using rule 12 (table_arg)


state 35

    4 table_prototype: table_keyword LPAREN table_args RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 36

    7 table_args: table_arg COMMA . table_args

    INTEGER      shift, and go to state 19
    FLOAT        shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING_TYPE  shift, and go to state 22

    table_args  go to state 40
    table_arg   go to state 24


state 37

   21 select_arg_series: names COMMA . select_arg_series

    ID  shift, and go to state 6

    names              go to state 27
    select_arg_series  go to state 41


state 38

   17 select_statement: SELECT select_args FROM . from_args WHERE where_args

    ID  shift, and go to state 6

    names      go to state 42
    from_args  go to state 43
    from_arg   go to state 44


state 39

    4 table_prototype: table_keyword LPAREN table_args RPAREN SEMICOLON .

    $default  reduce using rule 4 (table_prototype)


state 40

    7 table_args: table_arg COMMA table_args .

    $default  reduce using rule 7 (table_args)


state 41

   21 select_arg_series: names COMMA select_arg_series .

    $default  reduce using rule 21 (select_arg_series)


state 42

   25 from_arg: names .

    $default  reduce using rule 25 (from_arg)


state 43

   17 select_statement: SELECT select_args FROM from_args . WHERE where_args

    WHERE  shift, and go to state 45


state 44

   23 from_args: from_arg . COMMA from_args
   24          | from_arg .

    COMMA  shift, and go to state 46

    $default  reduce using rule 24 (from_args)


state 45

   17 select_statement: SELECT select_args FROM from_args WHERE . where_args

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    NOT     shift, and go to state 53
    LPAREN  shift, and go to state 54
    ID      shift, and go to state 6

    names        go to state 55
    where_args   go to state 56
    lowest_expr  go to state 57
    arith_expr   go to state 58
    arith_op     go to state 59


state 46

   23 from_args: from_arg COMMA . from_args

    ID  shift, and go to state 6

    names      go to state 42
    from_args  go to state 60
    from_arg   go to state 44


state 47

   36 arith_expr: NUMBER .

    $default  reduce using rule 36 (arith_expr)


state 48

   44 arith_op: MUL .

    $default  reduce using rule 44 (arith_op)


state 49

   45 arith_op: DIV .

    $default  reduce using rule 45 (arith_op)


state 50

   46 arith_op: MOD .

    $default  reduce using rule 46 (arith_op)


state 51

   42 arith_op: PLUS .

    $default  reduce using rule 42 (arith_op)


state 52

   43 arith_op: MINUS .

    $default  reduce using rule 43 (arith_op)


state 53

   29 where_args: NOT . where_args

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    NOT     shift, and go to state 53
    LPAREN  shift, and go to state 54
    ID      shift, and go to state 6

    names        go to state 55
    where_args   go to state 61
    lowest_expr  go to state 57
    arith_expr   go to state 58
    arith_op     go to state 59


state 54

   30 where_args: LPAREN . where_args RPAREN

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    NOT     shift, and go to state 53
    LPAREN  shift, and go to state 54
    ID      shift, and go to state 6

    names        go to state 55
    where_args   go to state 62
    lowest_expr  go to state 57
    arith_expr   go to state 58
    arith_op     go to state 59


state 55

   35 arith_expr: names .

    $default  reduce using rule 35 (arith_expr)


state 56

   17 select_statement: SELECT select_args FROM from_args WHERE where_args .
   26 where_args: where_args . COMMA where_args
   27           | where_args . AND where_args
   28           | where_args . OR where_args

    AND    shift, and go to state 63
    OR     shift, and go to state 64
    COMMA  shift, and go to state 65

    $default  reduce using rule 17 (select_statement)


state 57

   31 where_args: lowest_expr .

    $default  reduce using rule 31 (where_args)


state 58

   32 lowest_expr: arith_expr . comparison_op rvalue
   33 arith_expr: arith_expr . arith_op arith_expr

    EQUAL          shift, and go to state 66
    GREATER        shift, and go to state 67
    LESS           shift, and go to state 68
    LESS_EQUAL     shift, and go to state 69
    GREATER_EQUAL  shift, and go to state 70
    MUL            shift, and go to state 48
    DIV            shift, and go to state 49
    MOD            shift, and go to state 50
    PLUS           shift, and go to state 51
    MINUS          shift, and go to state 52

    comparison_op  go to state 71
    arith_op       go to state 72


state 59

   34 arith_expr: arith_op . arith_expr

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    ID      shift, and go to state 6

    names       go to state 55
    arith_expr  go to state 73
    arith_op    go to state 59


state 60

   23 from_args: from_arg COMMA from_args .

    $default  reduce using rule 23 (from_args)


state 61

   26 where_args: where_args . COMMA where_args
   27           | where_args . AND where_args
   28           | where_args . OR where_args
   29           | NOT where_args .

    COMMA  shift, and go to state 65

    COMMA     [reduce using rule 29 (where_args)]
    $default  reduce using rule 29 (where_args)


state 62

   26 where_args: where_args . COMMA where_args
   27           | where_args . AND where_args
   28           | where_args . OR where_args
   30           | LPAREN where_args . RPAREN

    AND     shift, and go to state 63
    OR      shift, and go to state 64
    RPAREN  shift, and go to state 74
    COMMA   shift, and go to state 65


state 63

   27 where_args: where_args AND . where_args

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    NOT     shift, and go to state 53
    LPAREN  shift, and go to state 54
    ID      shift, and go to state 6

    names        go to state 55
    where_args   go to state 75
    lowest_expr  go to state 57
    arith_expr   go to state 58
    arith_op     go to state 59


state 64

   28 where_args: where_args OR . where_args

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    NOT     shift, and go to state 53
    LPAREN  shift, and go to state 54
    ID      shift, and go to state 6

    names        go to state 55
    where_args   go to state 76
    lowest_expr  go to state 57
    arith_expr   go to state 58
    arith_op     go to state 59


state 65

   26 where_args: where_args COMMA . where_args

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    NOT     shift, and go to state 53
    LPAREN  shift, and go to state 54
    ID      shift, and go to state 6

    names        go to state 55
    where_args   go to state 77
    lowest_expr  go to state 57
    arith_expr   go to state 58
    arith_op     go to state 59


state 66

   37 comparison_op: EQUAL .

    $default  reduce using rule 37 (comparison_op)


state 67

   40 comparison_op: GREATER .

    $default  reduce using rule 40 (comparison_op)


state 68

   41 comparison_op: LESS .

    $default  reduce using rule 41 (comparison_op)


state 69

   39 comparison_op: LESS_EQUAL .

    $default  reduce using rule 39 (comparison_op)


state 70

   38 comparison_op: GREATER_EQUAL .

    $default  reduce using rule 38 (comparison_op)


state 71

   32 lowest_expr: arith_expr comparison_op . rvalue

    CONST_CHAR    shift, and go to state 78
    CONST_STRING  shift, and go to state 79
    NUMBER        shift, and go to state 80

    rvalue  go to state 81


state 72

   33 arith_expr: arith_expr arith_op . arith_expr

    NUMBER  shift, and go to state 47
    MUL     shift, and go to state 48
    DIV     shift, and go to state 49
    MOD     shift, and go to state 50
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    ID      shift, and go to state 6

    names       go to state 55
    arith_expr  go to state 82
    arith_op    go to state 59


state 73

   33 arith_expr: arith_expr . arith_op arith_expr
   34           | arith_op arith_expr .

    MUL    shift, and go to state 48
    DIV    shift, and go to state 49
    MOD    shift, and go to state 50
    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    MUL       [reduce using rule 34 (arith_expr)]
    DIV       [reduce using rule 34 (arith_expr)]
    MOD       [reduce using rule 34 (arith_expr)]
    PLUS      [reduce using rule 34 (arith_expr)]
    MINUS     [reduce using rule 34 (arith_expr)]
    $default  reduce using rule 34 (arith_expr)

    arith_op  go to state 72


state 74

   30 where_args: LPAREN where_args RPAREN .

    $default  reduce using rule 30 (where_args)


state 75

   26 where_args: where_args . COMMA where_args
   27           | where_args . AND where_args
   27           | where_args AND where_args .
   28           | where_args . OR where_args

    COMMA  shift, and go to state 65

    COMMA     [reduce using rule 27 (where_args)]
    $default  reduce using rule 27 (where_args)


state 76

   26 where_args: where_args . COMMA where_args
   27           | where_args . AND where_args
   28           | where_args . OR where_args
   28           | where_args OR where_args .

    AND    shift, and go to state 63
    COMMA  shift, and go to state 65

    COMMA     [reduce using rule 28 (where_args)]
    $default  reduce using rule 28 (where_args)


state 77

   26 where_args: where_args . COMMA where_args
   26           | where_args COMMA where_args .
   27           | where_args . AND where_args
   28           | where_args . OR where_args

    AND    shift, and go to state 63
    OR     shift, and go to state 64
    COMMA  shift, and go to state 65

    AND       [reduce using rule 26 (where_args)]
    OR        [reduce using rule 26 (where_args)]
    COMMA     [reduce using rule 26 (where_args)]
    $default  reduce using rule 26 (where_args)


state 78

   47 rvalue: CONST_CHAR .

    $default  reduce using rule 47 (rvalue)


state 79

   48 rvalue: CONST_STRING .

    $default  reduce using rule 48 (rvalue)


state 80

   49 rvalue: NUMBER .

    $default  reduce using rule 49 (rvalue)


state 81

   32 lowest_expr: arith_expr comparison_op rvalue .

    $default  reduce using rule 32 (lowest_expr)


state 82

   33 arith_expr: arith_expr . arith_op arith_expr
   33           | arith_expr arith_op arith_expr .

    MUL    shift, and go to state 48
    DIV    shift, and go to state 49
    MOD    shift, and go to state 50
    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    MUL       [reduce using rule 33 (arith_expr)]
    DIV       [reduce using rule 33 (arith_expr)]
    MOD       [reduce using rule 33 (arith_expr)]
    PLUS      [reduce using rule 33 (arith_expr)]
    MINUS     [reduce using rule 33 (arith_expr)]
    $default  reduce using rule 33 (arith_expr)

    arith_op  go to state 72
